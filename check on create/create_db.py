import sqlite3
import os

DB_NAME = "myro_panel.db"

def initialize_database():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_exists = os.path.exists(DB_NAME)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()

    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # 1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤ (–æ–Ω–∞ –Ω—É–∂–Ω–∞ –ø–µ—Ä–≤–æ–π)
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS referral_codes (
            code TEXT PRIMARY KEY,
            is_used INTEGER DEFAULT 0 CHECK (is_used IN (0,1)),  -- 0 = –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω, 1 = –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ referral_codes —Å–æ–∑–¥–∞–Ω–∞.")

    # 2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç referral_codes)
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            password BLOB NOT NULL,
            referral_code TEXT,
            registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (referral_code) REFERENCES referral_codes(code)
        )
    ''')
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞.")


    # 3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã API-–∫–ª—é—á–µ–π (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç users)
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS api_keys (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            key_name TEXT UNIQUE NOT NULL,
            expiration_date TEXT NOT NULL,
            device_limit INTEGER NOT NULL CHECK (device_limit >= 1),
            is_active INTEGER DEFAULT 1 CHECK (is_active IN (0,1)),  
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
        );
    ''')
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ api_keys —Å–æ–∑–¥–∞–Ω–∞.")
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_key TEXT NOT NULL,
            serial TEXT NOT NULL,
            timestamp INTEGER NOT NULL
        );
    ''')
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ logs —Å–æ–∑–¥–∞–Ω–∞.")
    # 4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
    cursor.execute('CREATE INDEX IF NOT EXISTS idx_users_username ON users (username);')
    cursor.execute('CREATE INDEX IF NOT EXISTS idx_api_keys_user ON api_keys (user_id);')
    cursor.execute('CREATE INDEX IF NOT EXISTS idx_referral_codes_code ON referral_codes (code);')
    print("‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

    # 5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    conn.commit()
    conn.close()

    if db_exists:
        print("üîÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    else:
        print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")

if __name__ == "__main__":
    initialize_database()
